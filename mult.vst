--
-- Generated by VASY
--
ENTITY mult IS
PORT(
  clk	: IN BIT;
  reset	: IN BIT;
  a	: IN BIT_VECTOR(3 DOWNTO 0);
  b	: IN BIT_VECTOR(3 DOWNTO 0);
  start	: IN BIT;
  p	: OUT BIT_VECTOR(4 DOWNTO 0);
  cat	: OUT BIT_VECTOR(3 DOWNTO 0);
  ready	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END mult;

ARCHITECTURE VST OF mult IS

  SIGNAL ld_a	: BIT;
  SIGNAL ld_b	: BIT;
  SIGNAL ld_cat	: BIT;
  SIGNAL clr_p	: BIT;
  SIGNAL ld_p	: BIT;
  SIGNAL ld_r	: BIT;
  SIGNAL shift_a	: BIT;
  SIGNAL shift_p	: BIT;
  SIGNAL op	: BIT;
  SIGNAL final_a	: BIT;
  SIGNAL count	: BIT;

  COMPONENT control
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  clk	: IN BIT;
  reset	: IN BIT;
  start	: IN BIT;
  count	: IN BIT;
  ld_a	: OUT BIT;
  ld_b	: OUT BIT;
  clr_p	: OUT BIT;
  ld_p	: OUT BIT;
  ld_r	: OUT BIT;
  ld_cat	: OUT BIT;
  shift_a	: OUT BIT;
  shift_p	: OUT BIT;
  op	: OUT BIT;
  final_a	: OUT BIT;
  ready	: OUT BIT
  );
  END COMPONENT;

  COMPONENT date
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  clk	: IN BIT;
  reset	: IN BIT;
  a	: IN BIT_VECTOR(3 DOWNTO 0);
  b	: IN BIT_VECTOR(3 DOWNTO 0);
  ld_a	: IN BIT;
  ld_b	: IN BIT;
  clr_p	: IN BIT;
  ld_p	: IN BIT;
  op	: IN BIT;
  shift_a	: IN BIT;
  shift_p	: IN BIT;
  final_a	: IN BIT;
  ld_r	: IN BIT;
  ld_cat	: IN BIT;
  count	: OUT BIT;
  p	: OUT BIT_VECTOR(4 DOWNTO 0);
  cat	: OUT BIT_VECTOR(3 DOWNTO 0)
  );
  END COMPONENT;

BEGIN

  i_ctrl : control
  PORT MAP (
    ready => ready,
    final_a => final_a,
    op => op,
    shift_p => shift_p,
    shift_a => shift_a,
    ld_r => ld_r,
    ld_p => ld_p,
    clr_p => clr_p,
    ld_cat => ld_cat,
    ld_b => ld_b,
    ld_a => ld_a,
    count => count,
    start => start,
    reset => reset,
    clk => clk,
    vdd => vdd,
    vss => vss
  );
  i_date : date
  PORT MAP (
    a => a,
    b => b,
    cat => cat,
    p => p,
    count => count,
    final_a => final_a,
    op => op,
    shift_p => shift_p,
    shift_a => shift_a,
    ld_cat => ld_cat,
    ld_r => ld_r,
    ld_p => ld_p,
    clr_p => clr_p,
    ld_b => ld_b,
    ld_a => ld_a,
    reset => reset,
    clk => clk,
    vdd => vdd,
    vss => vss
  );
END VST;
